/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.fixed {
  position: fixed;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.\!w-full {
  width: 100% !important;
}

.w-full {
  width: 100%;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.\!justify-between {
  justify-content: space-between !important;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.border {
  border-width: 1px;
}

.p-4 {
  padding: 1rem;
}

.text-center {
  text-align: center;
}

body {
  --tw-text-opacity: 1;
  color: rgb(3 7 18 / var(--tw-text-opacity));
}

body:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(226 232 240 / var(--tw-text-opacity));
}

svg {
  stroke: currentColor;
}

body {
  height: 100vh;
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

body:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

main {
  margin: auto;
  width: 100%;
  max-width: 100%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

@media (min-width: 768px) {
  main {
    width: 80ch;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
}

hr {
  border-color: rgb(163 163 163 / 0.5);
}

hr:is(.dark *) {
  border-color: rgb(64 64 64 / 0.5);
}

/* card */

.card {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

.card:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.card {
  padding: 0.5rem;
}

.card.secondary {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

.card.secondary:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

.card.round {
  border-radius: 0.125rem;
}

.card.more_padding {
  padding: 1rem;
}

/* button */

button,
a.button {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

button:hover,
a.button:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

button:is(.dark *),
a.button:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

button:is(.dark *):hover,
a.button:is(.dark *):hover {
  background-color: rgb(64 64 64 / 0.5);
}

button,
a.button {
  /* bg */
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  /* flex */
  width: -moz-max-content;
  width: max-content;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  --tw-text-opacity: 1;
  color: rgb(3 7 18 / var(--tw-text-opacity));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

button:is(.dark *),
a.button:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(226 232 240 / var(--tw-text-opacity));
}

button,
a.button {
  /* misc */
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  text-decoration: none !important;
  height: -moz-max-content;
  height: max-content;
}

button.round,
a.button.round {
  border-radius: 0.125rem;
}

button.secondary,
a.button.secondary {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

button.secondary:hover,
a.button.secondary:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

button.secondary:is(.dark *),
a.button.secondary:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

button.secondary:is(.dark *):hover,
a.button.secondary:is(.dark *):hover {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

button.tertiary,
a.button.tertiary {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

button.tertiary:hover,
a.button.tertiary:hover {
  background-color: rgb(212 212 212 / 0.5);
}

button.tertiary:is(.dark *),
a.button.tertiary:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

button.tertiary:is(.dark *):hover,
a.button.tertiary:is(.dark *):hover {
  background-color: rgb(23 23 23 / 0.5);
}

button.theme\:primary,
a.button.theme\:primary {
  --tw-bg-opacity: 1 !important;
  background-color: hsl(214 100% 75% / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1 !important;
  color: rgb(0 0 0 / var(--tw-text-opacity)) !important;
}

button.theme\:primary:hover,
a.button.theme\:primary:hover {
  --tw-bg-opacity: 1 !important;
  background-color: hsl(214 100% 70% / var(--tw-bg-opacity)) !important;
}

button.tab,
a.button.tab {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

button[disabled],
a.button[disabled] {
  cursor: not-allowed;
  opacity: 0.5;
}

button.green,
a.button.green {
  --tw-text-opacity: 1 !important;
  color: rgb(6 95 70 / var(--tw-text-opacity)) !important;
}

button.green:is(.dark *),
a.button.green:is(.dark *) {
  --tw-text-opacity: 1 !important;
  color: rgb(110 231 183 / var(--tw-text-opacity)) !important;
}

button.red,
a.button.red {
  --tw-text-opacity: 1 !important;
  color: rgb(153 27 27 / var(--tw-text-opacity)) !important;
}

button.red:is(.dark *),
a.button.red:is(.dark *) {
  --tw-text-opacity: 1 !important;
  color: rgb(252 165 165 / var(--tw-text-opacity)) !important;
}

/* typography */

a,
a code,
a strong,
a em {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}

a:hover,
a code:hover,
a strong:hover,
a em:hover {
  text-decoration-line: underline;
}

a:is(.dark *),
a code:is(.dark *),
a strong:is(.dark *),
a em:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(147 197 253 / var(--tw-text-opacity));
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 1rem;
  margin-top: 2rem;
  font-weight: 700;
  width: -moz-max-content;
  width: max-content;
  position: relative;
}

h1.no-margin,
h2.no-margin,
h3.no-margin,
h4.no-margin,
h5.no-margin,
h6.no-margin {
  margin: 0;
}

h1 {
  margin-bottom: 2.5rem;
  margin-top: 3.5rem;
  font-size: 2.5rem;
  text-align: center;
  width: 100%;
}

h2 {
  font-size: 2rem;
}

h3 {
  font-size: 1.75rem;
}

h4 {
  font-size: 1.5rem;
}

h5 {
  font-size: 1.25rem;
}

h6 {
  font-size: 1rem;
}

ul > li,
ol > li {
  margin-top: 0.25rem;
}

p:not(.mdnote p):not(.builder\:text),
pre,
table,
ul,
ol {
  margin-bottom: 1rem;
}

ol,
ul,
menu {
  list-style: inside;
  margin: 0 0 1rem 0;
  padding: 0 0 0 40px;
}

strong,
em,
del,
[role="underline"] {
  color: inherit !important;
  font-family: inherit !important;
}

/* input */

textarea {
  min-height: 100%;
  resize: none;
  border-radius: 0.125rem;
  background-color: transparent;
  padding: 0.5rem;
}

input,
textarea.secondary,
select {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

input:focus,
textarea.secondary:focus,
select:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

input:is(.dark *),
textarea.secondary:is(.dark *),
select:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

input:is(.dark *):focus,
textarea.secondary:is(.dark *):focus,
select:is(.dark *):focus {
  background-color: rgb(64 64 64 / 0.5);
}

select {
  height: 32px !important;
}

input,
select {
  border-radius: 0.125rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

textarea,
input,
select {
  height: -moz-max-content;
  height: max-content;
  width: 100%;
}

textarea:focus,
input:focus,
select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: hsl(214 100% 70% / var(--tw-ring-opacity));
}

input.small,
select.small {
  height: 32px;
}

input[disabled],
textarea[disabled],
select[disabled] {
  cursor: not-allowed;
  opacity: 0.5;
}

/* ... */

[role="custom-color"] * {
  color: inherit !important;
}

[role="spoiler"] {
  --hidden-color: var(--background-surface2);
  --active-color: var(--background-surface2a);
  padding: 0 var(--u-02);
  background: var(--hidden-color);
  border-radius: var(--roundness);
  color: transparent;
  transition: all 0.15s;
  box-shadow: none;
}

[role="spoiler"]:hover,
[role="spoiler"]:active,
[role="spoiler"]:focus {
  background: var(--active-color);
  color: inherit;
}

hue,
sat,
lit,
theme,
comment {
  display: none;
}

hr + br {
  display: none;
}

r {
  /* row */
  display: block;
}

rf {
  /* row flow */
  display: flex;
  justify-content: center;
}

rf.justify-right {
  justify-content: right;
}

br:not(.cm-line br) {
  display: block;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

blockquote p {
  border-left-width: 4px;
  border-color: currentColor;
  padding-left: 0.5rem;
  --tw-text-opacity: 1 !important;
  color: rgb(63 98 18 / var(--tw-text-opacity)) !important;
}

blockquote p:is(.dark *) {
  --tw-text-opacity: 1 !important;
  color: rgb(217 249 157 / var(--tw-text-opacity)) !important;
}

pre {
  border-left-width: 4px;
  --tw-border-opacity: 1;
  border-color: rgb(153 27 27 / var(--tw-border-opacity));
  padding-left: 0.5rem;
}

pre:is(.dark *) {
  --tw-border-opacity: 1;
  border-color: rgb(254 202 202 / var(--tw-border-opacity));
}

code:not(pre code),
.code {
  border-radius: 0.25rem;
  background-color: rgb(252 165 165 / 0.1);
  padding: 0.25rem;
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}

code:not(pre code):is(.dark *),
.code:is(.dark *) {
  background-color: rgb(252 165 165 / 0.1);
  --tw-text-opacity: 1;
  color: rgb(254 226 226 / var(--tw-text-opacity));
}

code:not(pre code),
.code {
  font-family: monospace;
  font-size: 13.5px;
  line-height: 1rem;
  max-width: 100%;
}

.mdnote {
  margin-bottom: 1rem;
  width: 100%;
  border-radius: 0.25rem;
  padding: 1rem;
}

.mdnote.note-warn {
  background-color: rgb(253 224 71 / 0.25);
}

.mdnote.note-warn:is(.dark *) {
  background-color: rgb(253 224 71 / 0.15);
}

.mdnote.note-warn .mdnote-title {
  --tw-text-opacity: 1;
  color: rgb(113 63 18 / var(--tw-text-opacity));
}

.mdnote.note-warn .mdnote-title:is(.dark *) {
  color: rgb(254 240 138 / 0.75);
}

.mdnote.note-info {
  background-color: rgb(56 189 248 / 0.25);
}

.mdnote.note-info:is(.dark *) {
  background-color: rgb(56 189 248 / 0.15);
}

.mdnote.note-info .mdnote-title {
  --tw-text-opacity: 1;
  color: rgb(12 74 110 / var(--tw-text-opacity));
}

.mdnote.note-info .mdnote-title:is(.dark *) {
  color: rgb(125 211 252 / 0.75);
}

.mdnote.note-note {
  background-color: rgb(74 222 128 / 0.25);
}

.mdnote.note-note:is(.dark *) {
  background-color: rgb(74 222 128 / 0.15);
}

.mdnote.note-note .mdnote-title {
  --tw-text-opacity: 1;
  color: rgb(20 83 45 / var(--tw-text-opacity));
}

.mdnote.note-note .mdnote-title:is(.dark *) {
  color: rgb(134 239 172 / 0.75);
}

.mdnote.note-error {
  background-color: rgb(248 113 113 / 0.25);
}

.mdnote.note-error:is(.dark *) {
  background-color: rgb(248 113 113 / 0.15);
}

.mdnote.note-error .mdnote-title {
  --tw-text-opacity: 1;
  color: rgb(127 29 29 / var(--tw-text-opacity));
}

.mdnote.note-error .mdnote-title:is(.dark *) {
  color: rgb(254 202 202 / 0.75);
}

/* footer */

.footernav {
  display: flex;
  gap: 0.75rem;
}

.footernav .item {
  position: relative;
  margin-left: 0.5rem;
}

.footernav .item:first-child {
  margin-left: 0;
}

.footernav .item::before {
  content: "·";
  position: absolute;
  left: -0.75rem;
}

.footernav .item:first-child:before {
  display: none;
}

/* avatar */

.avatar {
  --size: 50px;
  border-radius: var(--roundness);
  width: var(--size);
  height: var(--size);
}

/* nav */

nav {
  position: sticky;
  top: 0px;
  z-index: 50;
  width: 100%;
  /* general */
  background-color: rgb(229 229 229 / 0.75);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  --tw-backdrop-blur: blur(16px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

nav:is(.dark *) {
  background-color: rgb(38 38 38 / 0.75);
}

nav {
  /* look */
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: rgb(38 38 38 / 0.05);
  --tw-shadow: var(--tw-shadow-colored);
}

nav:is(.dark *) {
  --tw-shadow-color: rgb(38 38 38 / 0.25);
  --tw-shadow: var(--tw-shadow-colored);
}

nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
  /* layout */
}

nav button,
nav .button,
.link-list .option button,
.link-list .option a.button {
  background-color: transparent !important;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

nav button:hover,
nav .button:hover,
.link-list .option button:hover,
.link-list .option a.button:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: hsl(214 100% 70% / var(--tw-ring-opacity));
}

nav button,
nav .button,
.link-list .option button,
.link-list .option a.button {
  /* fancy effects */
  min-height: 35px;
}

nav button.selected {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1 !important;
  background-color: hsl(214 100% 75% / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

/* chips */

.chip {
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: currentColor;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

/* link list */

.link-list {
  position: absolute;
  bottom: 0px;
  display: flex;
  flex-direction: column;
  background-color: rgb(229 229 229 / 0.75);
  --tw-backdrop-blur: blur(16px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.link-list:is(.dark *) {
  background-color: rgb(38 38 38 / 0.75);
}

.link-list {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: rgb(38 38 38 / 0.05);
  --tw-shadow: var(--tw-shadow-colored);
}

.link-list:is(.dark *) {
  --tw-shadow-color: rgb(38 38 38 / 0.25);
  --tw-shadow: var(--tw-shadow-colored);
}

.link-list {
  z-index: 50;
  height: -moz-max-content;
  height: max-content;
  max-height: 100%;
  width: 25rem;
  max-width: 100%;
  overflow: hidden auto;
}

.link-list .option {
  display: flex;
  justify-content: center;
  background-color: transparent;
  padding: 1rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.link-list .option:hover {
  background-color: rgb(212 212 212 / 0.25) !important;
}

.link-list .option:is(.dark *):hover {
  background-color: rgb(64 64 64 / 0.25) !important;
}

.link-list .option button,
.link-list .option a.button {
  width: 100%;
  justify-content: flex-start;
  border-radius: 0.125rem;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity)) !important;
}

.link-list .option button:is(.dark *),
.link-list .option a.button:is(.dark *) {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(64 64 64 / var(--tw-bg-opacity)) !important;
}

dialog {
  position: absolute;
  bottom: 0px;
  display: flex;
  flex-direction: column;
  background-color: rgb(229 229 229 / 0.75);
  --tw-backdrop-blur: blur(16px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

dialog:is(.dark *) {
  background-color: rgb(38 38 38 / 0.75);
}

dialog {
  position: fixed;
  margin: auto;
  border-style: none;
  color: currentColor;
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  display: none;
}

dialog[open] {
  display: block;
}

dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
  -webkit-backdrop-filter: blur(5px);
          backdrop-filter: blur(5px);
}

@media (min-width: 768px) {
  .md\:flex-row {
    flex-direction: row;
  }

  .md\:justify-start {
    justify-content: flex-start;
  }

  .md\:justify-between {
    justify-content: space-between;
  }
}
